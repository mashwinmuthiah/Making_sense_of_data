housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv")
housing.df<-read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\bostonhousing.csv",header = TRUE)
head(housing.df)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv")
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak.csv",header = TRUE)
## line chart for the Amtrak data
Amtrak.df <- read.csv("C:\\Users\\ashwi\\Desktop\\R\\DMBA-R-datasets\\DMBA-R-datasets\\Amtrak-data.csv",header = TRUE)
# use time series analysis
library(forecast)
# use time series analysis
library(forecast)
install.packages("forecast")
# use time series analysis
library(forecast)
ridership.ts <- ts(Amtrak.df$Ridership, start = c(1991, 1), end = c(2004, 3), freq = 12)
plot(ridership.ts, xlab = "Year", ylab = "Ridership (in 000s)", ylim = c(1300, 2300))
## Boston housing data
housing.df <- read.csv("BostonHousing.csv")
## scatter plot with axes names
plot(housing.df$MEDV ~ housing.df$LSTAT, xlab = "MDEV", ylab = "LSTAT")
# alternative plot with ggplot
library(ggplot2)
ggplot(housing.df) + geom_point(aes(x = LSTAT, y = MEDV), colour = "navy", alpha = 0.7)
## barchart of CHAS vs. mean MEDV
# compute mean MEDV per CHAS = (0, 1)
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanMEDV")
barplot(data.for.plot$MeanMEDV, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "Avg. MEDV")
# alternative plot with ggplot
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
## barchart of CHAS vs. % CAT.MEDV
data.for.plot <- aggregate(housing.df$CAT..MEDV, by = list(housing.df$CHAS), FUN = mean)
names(data.for.plot) <- c("CHAS", "MeanCATMEDV")
barplot(data.for.plot$MeanCATMEDV * 100, names.arg = data.for.plot$CHAS,
xlab = "CHAS", ylab = "% of CAT.MEDV")
m<-martix(c(1,2,3,4,5,6),ncol=2)
m<-matrix(c(1,2,3,4,5,6), ncol=2)
m
m[1,2]
setwd("C:/Users/ashwi/Desktop/Ashwin/R/IE7275 working")
usedcars<-read.csv("usedcars(1).csv",stringsAsFactors = FALSE)
str(usedcars)
summary(usedcars)
summary(usercars$prie)
summary(usercars$price)
summary(usedcars$year)
summary(usedcars[c("price","milege")])
range(usedcars$price)
diff(range(usedcars$price))
IQR(usedcars$price)
quantile(usedcars$price)
quantile(usedcars$price,probs = c(0.01,0.99))
quantile(usedcars$price,seq(from = 0,to=1,by=0.2))
boxplot(usedcars$price,main="box plot of used car price")
boxplot(usedcars$price,main="box plot of used car price",ylab="price($)")
boxplot(usedcars$mileage,main="box plot of used car milage",ylab="Miles(ml.)")
hist(usedcars$price,main="histogram of used car price",xlab="price($)")
var(usedcars$price)
sd(usedcars$price)
table(usedcars$year)
table(usedcars$color)
prop.table((table(usedcars$model)))
prop.table((table(usedcars$model)))*100
round(prop.table((table(usedcars$model)))*100,digits = 1)
plot(x=usedcars$mileage,y=usedcars$mileage,main="Scattterplot of price vs Milege",xlab = "Miledge(ml.)",ylab = "Price($)")
plot(x=usedcars$price,y=usedcars$mileage,main="Scattterplot of price vs Milege",xlab = "Miledge(ml.)",ylab = "Price($)")
plot(x=usedcars$mileage,y=usedcars$price,main="Scattterplot of price vs Milege",xlab = "Miledge(ml.)",ylab = "Price($)")
usedcars$conservative<-usedcars$color %in% c("black","gray","silver","white")
table(usedcars$conservative)
usedcars$conservative<-usedcars$color %in% c("black","gray","silver","white")
table(usedcars$conservative)
install.packages("gmodels")
CrossTable(x = usedcars$model, y = usedcars$conservative)
library(ggplot2)
ggplot(housing.df) + geom_point(aes(x=LSTAT , y=MEDV),color="navy",alpha=0.7)
data.for.plot<-aggregate(housing.df$MEDV,by=list(housing.df$CHAS),fun=mean)
data.for.plot<-aggregate(housing.df$MEDV,by=list(housing.df$CHAS),fun = mean)
## panel plots
# compute mean MEDV per RAD and CHAS
# In aggregate() use argument drop = FALSE to include all combinations
# (exiting and missing) of RAD X CHAS.
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$RAD, housing.df$CHAS),
FUN = mean, drop = FALSE)
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$CHAS),FUN = mean)
+                            FUN = mean, drop = FALSE)
data.for.plot <- aggregate(housing.df$MEDV, by = list(housing.df$CHAS),FUN = mean)
barplot(data.for.plot$meanMEDV), names.arg = data.for.plot$CHAS)
names(data.for.plot)<-c("CHAS","MenaMEDV")
barplot(data.for.plot$meanMEDV), names.arg = data.for.plot$CHAS)
## side-by-side boxplots
# use par() to split the plots into panels.
par(mfcol = c(1, 4))
boxplot(housing.df$NOX ~ housing.df$CAT..MEDV, xlab = "CAT.MEDV", ylab = "NOX")
boxplot(housing.df$LSTAT ~ housing.df$CAT..MEDV, xlab = "CAT.MEDV", ylab = "LSTAT")
boxplot(housing.df$PTRATIO ~ housing.df$CAT..MEDV, xlab = "CAT.MEDV", ylab = "PTRATIO")
boxplot(housing.df$INDUS ~ housing.df$CAT..MEDV, xlab = "CAT.MEDV", ylab = "INDUS")
#### Figure 3.4
## simple heatmap of correlations (without values)
heatmap(cor(housing.df), Rowv = NA, Colv = NA)
## heatmap with values
library(gplots)
## heatmap with values
library(ggplots)
## heatmap with values
library(gplots)
heatmap.2(cor(housing.df), Rowv = FALSE, Colv = FALSE, dendrogram = "none",
cellnote = round(cor(housing.df),2),
notecol = "black", key = FALSE, trace = 'none', margins = c(10,10))
library(ggplot2)
library(reshape) # to generate input for the plot
cor.mat <- round(cor(housing.df),2) # rounded correlation matrix
melted.cor.mat <- melt(cor.mat)
ggplot(melted.cor.mat, aes(x = X1, y = X2, fill = value)) +
geom_tile() +
geom_text(aes(x = X1, y = X2, label = value))
# replace dataFrame with your data.
# is.na() returns a Boolean (TRUE/FALSE) output indicating the location of missing
# values.
# multiplying the Boolean value by 1 converts the output into binary (0/1).
heatmap(1 * is.na(dataFrame), Rowv = NA, Colv = NA)
